[probe]
pin: PG11
# speed: 20
# samples: 3
x_offset: -1.925 # offset for microswitch x direction off nozzle
y_offset: 26.6 # offset for microswitch y direction off nozzle
z_offset: 8.485 # Less is higher from the bed, more is closer to the bed 

###################################################################
# Variables
###################################################################

# [gcode_macro _probe_dock]
# # probe dock position
# # variable_docklocation_x:      -8    # X Dock position
# # variable_docklocation_y:      281    # Y Dock position
# variable_probe_speed_move: 200
# variable_probe_speed_dock: 150
# variable_probe_speed_attach: 150
# variable_probe_speed_detach: 200

# variable_probe_dock_entry_x: 40
# variable_probe_dock_entry_y: 281

# variable_probe_dock_x: -8
# variable_probe_dock_y: 281

# variable_probe_dock_detach_x: -8
# variable_probe_dock_detach_y: 200

# variable_probe_dock_park_x: -8
# variable_probe_dock_park_y: 212

# # variable_probe_dock_z: 10
# # variable_probe_safe_z: 10

# gcode:

# ###################################################################
# # Helper Macros
# ###################################################################
# [gcode_macro IS_PROBE_ATTACHED]
# gcode:
#   QUERY_PROBE
#   _IS_PROBE_ATTACHED

# [gcode_macro IS_PROBE_REMOVED]
# gcode:
#   QUERY_PROBE
#   _IS_PROBE_REMOVED

# [gcode_macro PROBE_PICKUP]
# gcode:
#  #  {% if printer.toolhead.position.z < 30 %}
# 	# G1 Z30 F{printer["gcode_macro _probe_dock"].probe_speed_dock | int (50) * 60}
#  #  {% endif %}
#   QUERY_PROBE
#   _PROBE_PICKUP

# [gcode_macro PROBE_PARK]
# gcode:
#   { action_respond_info("Parking Probe") }
#   # raise head if head is to low
#  #  {% if printer.toolhead.position.z < 30 %}
# 	# G1 Z30 F{printer["gcode_macro _probe_dock"].probe_speed_dock | int (50) * 60}
#  #  {% endif %}
#   QUERY_PROBE
#   _PROBE_PARK
#   IS_PROBE_REMOVED

# [gcode_macro Z_TILT_ADJUST]
# rename_existing: Z_TILT_ADJUST_ORIGINAL
# gcode:
#   PROBE_PICKUP
#   Z_TILT_ADJUST_ORIGINAL {rawparams}

# [gcode_macro BED_MESH_CALIBRATE]
# rename_existing: BED_MESH_CALIBRATE_ORIGINAL
# gcode:
#   PROBE_PICKUP
#   BED_MESH_CALIBRATE_ORIGINAL {rawparams}

# # [gcode_macro SCREWS_TILT_CALCULATE]
# # rename_existing: SCREWS_TILT_CALCULATE_ORIGINAL
# # gcode:
# #   PROBE_PICKUP
# #   SCREWS_TILT_CALCULATE_ORIGINAL {rawparams}

# [gcode_macro PROBE]
# rename_existing: PROBE_ORIGINAL
# gcode:
#   PROBE_PICKUP
#   PROBE_ORIGINAL {rawparams}

# [gcode_macro PROBE_HOME]
# gcode:
#   {% set safe_x_pos = printer.configfile.settings.safe_z_home.home_xy_position[0] %}
#   {% set safe_y_pos = printer.configfile.settings.safe_z_home.home_xy_position[1] %}
#   {% set travel_speed = printer.configfile.settings.safe_z_home.speed * 60 %}
#   # probe still attached. Home using probe
#   AUTOHOME
#   # SET_KINEMATIC_POSITION Z={printer.configfile.settings.stepper_z.position_max}
#   PROBE_PICKUP
#   G0 X{safe_x_pos} Y{safe_y_pos} F{travel_speed}
#   PROBE
#   _PROBE_HOME2

# [gcode_macro _PROBE_HOME2]
# gcode:
#   # set z_height based on probe result
#   # {% set z_home = printer.toolhead.position.z - printer.probe.last_z_result + printer.configfile.settings.probe.z_offset %}
#   {% set z_hop_speed = printer.configfile.settings.safe_z_home.z_hop_speed * 60 %}
#   SET_KINEMATIC_POSITION Z={printer.probe.last_z_result}
#   G0 Z{printer.configfile.settings.probe.z_offset + 10} F{z_hop_speed}
#   # Z_TILT_ADJUST
#   # G0 Z{printer.configfile.settings.probe.z_offset + 10} F{z_hop_speed}

# [gcode_macro PROBE_CALIBRATE]
# rename_existing: PROBE_CALIBRATE_ORIGINAL
# gcode:
#   PROBE_PICKUP
#   PROBE_CALIBRATE_ORIGINAL {rawparams}

# [gcode_macro PROBE_ACCURACY]
# rename_existing: PROBE_ACCURACY_ORIGINAL
# gcode:
#   PROBE_PICKUP
#   PROBE_ACCURACY_ORIGINAL {rawparams}

# ###################################################################
# # internal helper Macros
# ###################################################################
# [gcode_macro _IS_PROBE_ATTACHED]
# gcode:
#   {% if printer.probe.last_query == True %}
#     { action_raise_error("!!! Probe not attached !!!") }
#   {% else %}
#     { action_respond_info("Probe detected") }
#     # RESPOND MSG="Probe detected"
#   {% endif %}

# [gcode_macro _IS_PROBE_REMOVED]
# gcode:
#   {% if printer.probe.last_query == False %}
#     { action_raise_error("!!! Probe is attached !!!") }
#   {% else %}
#     { action_respond_info("Probe removed") }
#     # RESPOND MSG="Probe removed"
#   {% endif %}

# [gcode_macro _PROBE_PICKUP]
# gcode:
#   {% set dock_speed = printer["gcode_macro _probe_dock"].probe_speed_dock | int (50) * 60 %}
#   {% set attach_speed = printer["gcode_macro _probe_dock"].probe_speed_attach | int (50) * 60 %}
#   {% set move_speed = printer["gcode_macro _probe_dock"].probe_speed_move | int (50) * 60 %}
#   {% set entry_x = printer["gcode_macro _probe_dock"].probe_dock_entry_x %}
#   {% set entry_y = printer["gcode_macro _probe_dock"].probe_dock_entry_y %}
#   {% set dock_x = printer["gcode_macro _probe_dock"].probe_dock_x %}
#   {% set dock_y = printer["gcode_macro _probe_dock"].probe_dock_y %}
#   {% if printer.probe.last_query == False %} 
#     { action_respond_info("Probe attached") }
#   {% else %}
#     # Go to entry point
#     G1 X{entry_x} Y{entry_y} F{move_speed}
#     # Go to dock position
#     G1 X{dock_x} Y{dock_y} F{dock_speed}
#     # Go to entry point to attach probe
#     G1 X{entry_x} Y{entry_y} F{attach_speed}
#     G4 P500
#     IS_PROBE_ATTACHED
#   {% endif %}

# [gcode_macro _PROBE_PARK]
# gcode:
#   {% set dock_speed = printer["gcode_macro _probe_dock"].probe_speed_dock | int (50) * 60 %}
#   {% set detach_speed = printer["gcode_macro _probe_dock"].probe_speed_detach | int (50) * 60 %}
#   {% set move_speed = printer["gcode_macro _probe_dock"].probe_speed_move | int (50) * 60 %}
#   {% set entry_x = printer["gcode_macro _probe_dock"].probe_dock_entry_x %}
#   {% set entry_y = printer["gcode_macro _probe_dock"].probe_dock_entry_y %}
#   {% set dock_x = printer["gcode_macro _probe_dock"].probe_dock_x %}
#   {% set dock_y = printer["gcode_macro _probe_dock"].probe_dock_y %}
#   {% set detach_x = printer["gcode_macro _probe_dock"].probe_dock_detach_x %}
#   {% set detach_y = printer["gcode_macro _probe_dock"].probe_dock_detach_y %}
#   {% set park_x = printer["gcode_macro _probe_dock"].probe_dock_park_x %}
#   {% set park_y = printer["gcode_macro _probe_dock"].probe_dock_park_y %}
#   {% if printer.probe.last_query == False %} 
#     # Go to entry point
#     G1 X{entry_x} Y{entry_y} F{move_speed}
#     # Go to dock position
#     G1 X{dock_x} Y{dock_y} F{dock_speed}
#     # Go to detach position
#     G1 X{detach_x} Y{detach_y} F{detach_speed}
#     G1 X{park_x} Y{park_y} F{move_speed}
#     G4 P125
#     IS_PROBE_REMOVED
#   {% endif %}